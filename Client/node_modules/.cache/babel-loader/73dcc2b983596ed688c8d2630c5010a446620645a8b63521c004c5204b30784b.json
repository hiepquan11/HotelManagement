{"ast":null,"code":"var _jsxFileName = \"/Users/caoductin/IdeaProjects/HotelManagement/Client/src/Room/AddRoomForRoomtype.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomTypeView = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState(null);\n\n  // Fetch rooms from API\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/room\").then(res => {\n      var _res$data$_embedded;\n      const roomsData = ((_res$data$_embedded = res.data._embedded) === null || _res$data$_embedded === void 0 ? void 0 : _res$data$_embedded.rooms) || []; // Lấy danh sách rooms\n      console.log(\"Rooms API response:\", roomsData);\n      setRooms(roomsData);\n    }).catch(error => console.error(\"Error fetching rooms:\", error));\n  }, []);\n\n  // Lọc các phòng theo RoomType\n  const getRoomsByRoomType = roomTypeId => {\n    if (!Array.isArray(rooms)) {\n      console.error(\"Rooms is not an array:\", rooms);\n      return [];\n    }\n    return rooms.filter(room => {\n      // Thực hiện logic lọc roomTypeId dựa vào URL roomType\n      return room._links.roomType.href.includes(`/roomType/${roomTypeId}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedRoomType(1),\n      children: \"Show Rooms for Type 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedRoomType(2),\n      children: \"Show Rooms for Type 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedRoomType && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Rooms for RoomType \", selectedRoomType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getRoomsByRoomType(selectedRoomType).map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            margin: \"10px\",\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Room ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this), \" \", room.roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Room Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 20\n            }, this), \" \", room.roomNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, room.roomId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomTypeView, \"FQ3QX+G/s5ZM4ZNAjHebHJfuf7A=\");\n_c = RoomTypeView;\nexport default RoomTypeView;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoomTypeView","_s","rooms","setRooms","selectedRoomType","setSelectedRoomType","get","then","res","_res$data$_embedded","roomsData","data","_embedded","console","log","catch","error","getRoomsByRoomType","roomTypeId","Array","isArray","filter","room","_links","roomType","href","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","border","margin","padding","roomId","roomNumber","_c","$RefreshReg$"],"sources":["/Users/caoductin/IdeaProjects/HotelManagement/Client/src/Room/AddRoomForRoomtype.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst RoomTypeView = () => {\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState(null);\n\n  // Fetch rooms from API\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/room\")\n      .then((res) => {\n        const roomsData = res.data._embedded?.rooms || []; // Lấy danh sách rooms\n        console.log(\"Rooms API response:\", roomsData);\n        setRooms(roomsData);\n      })\n      .catch((error) => console.error(\"Error fetching rooms:\", error));\n  }, []);\n\n  // Lọc các phòng theo RoomType\n  const getRoomsByRoomType = (roomTypeId) => {\n    if (!Array.isArray(rooms)) {\n      console.error(\"Rooms is not an array:\", rooms);\n      return [];\n    }\n    return rooms.filter((room) => {\n      // Thực hiện logic lọc roomTypeId dựa vào URL roomType\n      return room._links.roomType.href.includes(`/roomType/${roomTypeId}`);\n    });\n  };\n\n  return (\n    <div>\n      <h1>Room Types</h1>\n\n      {/* Các nút để chọn loại phòng */}\n      <button onClick={() => setSelectedRoomType(1)}>Show Rooms for Type 1</button>\n      <button onClick={() => setSelectedRoomType(2)}>Show Rooms for Type 2</button>\n\n      {/* Hiển thị danh sách phòng theo RoomType */}\n      {selectedRoomType && (\n        <div>\n          <h2>Rooms for RoomType {selectedRoomType}</h2>\n          <div>\n            {getRoomsByRoomType(selectedRoomType).map((room) => (\n              <div key={room.roomId} style={{ border: \"1px solid #ccc\", margin: \"10px\", padding: \"10px\" }}>\n                <p><strong>Room ID:</strong> {room.roomId}</p>\n                <p><strong>Room Number:</strong> {room.roomNumber}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoomTypeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}