{"ast":null,"code":"var _jsxFileName = \"/Users/caoductin/IdeaProjects/HotelManagement/Client/src/Room/AddRoomForRoomtype.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomTypeView = () => {\n  _s();\n  const [roomTypes, setRoomTypes] = useState([]); // Danh sách RoomType\n  const [rooms, setRooms] = useState([]); // Danh sách tất cả Room\n  const [selectedRoomType, setSelectedRoomType] = useState(null); // RoomType được chọn\n\n  // Fetch RoomType\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/roomType\").then(res => setRoomTypes(res.data)).catch(err => console.error(\"Failed to fetch room types\", err));\n  }, []);\n\n  // Fetch Room\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/room\").then(res => setRooms(res.data)).catch(err => console.error(\"Failed to fetch rooms\", err));\n  }, []);\n\n  // Lọc danh sách Room theo RoomType\n  const getRoomsByRoomType = roomTypeId => {\n    return rooms.filter(room => room.roomType.roomTypeId === roomTypeId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Room Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: roomTypes.map(roomType => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded-lg p-4 cursor-pointer hover:shadow-lg\",\n        onClick: () => setSelectedRoomType(roomType.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: roomType.images[0],\n          alt: roomType.name,\n          className: \"w-full h-40 object-cover rounded-md mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: roomType.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: roomType.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800 font-bold\",\n          children: [\"Price: \", roomType.price, \" VND\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, roomType.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), selectedRoomType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold\",\n        children: [\"Rooms in Room Type \", selectedRoomType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 mt-4\",\n        children: getRoomsByRoomType(selectedRoomType).map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg p-4 hover:shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: [\"Room \", room.roomNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", room.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bed Quantity: \", room.bedQuantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: room.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, room.roomId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomTypeView, \"WHAQjh4Q4/jFDiaVZq+BpobB5ZE=\");\n_c = RoomTypeView;\nexport default RoomTypeView;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeView\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RoomTypeView","_s","roomTypes","setRoomTypes","rooms","setRooms","selectedRoomType","setSelectedRoomType","get","then","res","data","catch","err","console","error","getRoomsByRoomType","roomTypeId","filter","room","roomType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","src","images","alt","name","description","price","roomNumber","status","bedQuantity","roomId","_c","$RefreshReg$"],"sources":["/Users/caoductin/IdeaProjects/HotelManagement/Client/src/Room/AddRoomForRoomtype.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst RoomTypeView = () => {\n  const [roomTypes, setRoomTypes] = useState([]); // Danh sách RoomType\n  const [rooms, setRooms] = useState([]); // Danh sách tất cả Room\n  const [selectedRoomType, setSelectedRoomType] = useState(null); // RoomType được chọn\n\n  // Fetch RoomType\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/roomType\")\n      .then((res) => setRoomTypes(res.data))\n      .catch((err) => console.error(\"Failed to fetch room types\", err));\n  }, []);\n\n  // Fetch Room\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/room\")\n      .then((res) => setRooms(res.data))\n      .catch((err) => console.error(\"Failed to fetch rooms\", err));\n  }, []);\n\n  // Lọc danh sách Room theo RoomType\n  const getRoomsByRoomType = (roomTypeId) => {\n    return rooms.filter((room) => room.roomType.roomTypeId === roomTypeId);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Room Types</h1>\n\n      {/* Danh sách RoomType */}\n      <div className=\"grid grid-cols-3 gap-4\">\n        {roomTypes.map((roomType) => (\n          <div\n            key={roomType.id}\n            className=\"border rounded-lg p-4 cursor-pointer hover:shadow-lg\"\n            onClick={() => setSelectedRoomType(roomType.id)}\n          >\n            {/* Hình ảnh RoomType */}\n            <img\n              src={roomType.images[0]}\n              alt={roomType.name}\n              className=\"w-full h-40 object-cover rounded-md mb-4\"\n            />\n            {/* Thông tin RoomType */}\n            <h2 className=\"text-xl font-semibold\">{roomType.name}</h2>\n            <p className=\"text-gray-600\">{roomType.description}</p>\n            <p className=\"text-gray-800 font-bold\">Price: {roomType.price} VND</p>\n          </div>\n        ))}\n      </div>\n\n      {/* Hiển thị danh sách Room thuộc RoomType */}\n      {selectedRoomType && (\n        <div className=\"mt-8\">\n          <h2 className=\"text-xl font-bold\">\n            Rooms in Room Type {selectedRoomType}\n          </h2>\n          <div className=\"grid grid-cols-2 gap-4 mt-4\">\n            {getRoomsByRoomType(selectedRoomType).map((room) => (\n              <div\n                key={room.roomId}\n                className=\"border rounded-lg p-4 hover:shadow-lg\"\n              >\n                {/* Room Info */}\n                <h3 className=\"text-lg font-semibold\">Room {room.roomNumber}</h3>\n                <p>Status: {room.status}</p>\n                <p>Bed Quantity: {room.bedQuantity}</p>\n                <p>{room.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoomTypeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}