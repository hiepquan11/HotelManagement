{"ast":null,"code":"var _jsxFileName = \"/Users/caoductin/IdeaProjects/HotelManagement/Client/src/page/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const parseJwt = token => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (e) {\n      console.error(\"Invalid token\", e);\n      return null;\n    }\n  };\n  // Check for JWT in localStorage on app load\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      setIsAuthenticated(true);\n      const userInfo = parseJwt(jwt);\n      setUser(userInfo);\n    }\n  }, []);\n  console.log(user === null || user === void 0 ? void 0 : user.role);\n  const login = () => {\n    const userInfo = lo;\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"jwt\");\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","console","error","jwt","localStorage","getItem","userInfo","log","role","login","lo","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caoductin/IdeaProjects/HotelManagement/Client/src/page/AuthContext.js"],"sourcesContent":["\nimport React, { createContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const parseJwt = (token) => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split('')\n          .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n          .join('')\n      );\n      return JSON.parse(jsonPayload);\n    } catch (e) {\n      console.error(\"Invalid token\", e);\n      return null;\n    }\n  };\n  // Check for JWT in localStorage on app load\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      setIsAuthenticated(true);\n      const userInfo = parseJwt(jwt);\n      setUser(userInfo);\n    }\n\n  }, []);\n\n  console.log(user?.role);\n\n  const login = () => {\n    const userInfo = lo\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwt\");\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAI;MACF,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,CAAC,CACTD,KAAK,CAAC,EAAE,CAAC,CACTM,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACjEC,IAAI,CAAC,EAAE,CACZ,CAAC;MACD,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,CAAC,CAAC;MACjC,OAAO,IAAI;IACb;EACF,CAAC;EACD;EACA5B,SAAS,CAAC,MAAM;IACd,MAAM+B,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACvC,IAAIF,GAAG,EAAE;MACPvB,kBAAkB,CAAC,IAAI,CAAC;MACxB,MAAM0B,QAAQ,GAAGvB,QAAQ,CAACoB,GAAG,CAAC;MAC9BrB,OAAO,CAACwB,QAAQ,CAAC;IACnB;EAEF,CAAC,EAAE,EAAE,CAAC;EAENL,OAAO,CAACM,GAAG,CAAC1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2B,IAAI,CAAC;EAEvB,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAMH,QAAQ,GAAGI,EAAE;IACnB9B,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM+B,MAAM,GAAGA,CAAA,KAAM;IACnBP,YAAY,CAACQ,UAAU,CAAC,KAAK,CAAC;IAC9BhC,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACC,KAAK,EAAE;MAAEnC,eAAe;MAAE8B,KAAK;MAAEE,MAAM;MAAE9B;IAAK,CAAE;IAAAJ,QAAA,EACnEA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxC,EAAA,CAjDWF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}